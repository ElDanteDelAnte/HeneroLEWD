<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SP_chirillaIdle1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_char</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit from base
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
//you can change
type = "chirilla";      //protected
reach = 16;             //distance in pixels before enemy can reach player
position = 1;           //corresponds to sex anim number, will be randomized, later

//leave alone

//act = "Idle";
//curAct = act;
//curvel = 0;            
target = obj_player;    //Dante: is this necessary?
//targetX = obj_player.x;
//targetY = obj_player.y;
numDir = 4;             //Dante: Different from Player, very interesting
//variant = 0;
polar = true;           //protected
//stam = 100;           
lust = 0;               //private
sextimer = 0;           //private?
//no HP?
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit Step
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Behavior
targetX = global.playerX;   //replace with obj_player.x/.y?
targetY = global.playerY;

//Dante: Work on eliminating this
if(curAct != act)
{
    curAct = act;
    ai(act);        //Dante: investigate script further
}

//Dante: I'm inferring that 256 is the chase range
if(dist &gt; 256)
{
    act = "Idle";
}
else if(dist &lt; 256 &amp;&amp; dist &gt; reach)
{
    //Dante: If suspened means paused, try to make this more universal
    if(!obj_player.suspended)
    {
        act = "Walk";
    }
    
}
else if(dist &lt; reach &amp;&amp; act != "Sexfinish" + string(position))
{
    act = "Sexloop" + string(position);     //replace with var indicating number of scenes and randomize
    
}
//Dante: As is, runs over

//Dante: figure out what these blocks are and deconstruct
//Also, see if these can't be deconstructed as scripts
if(act == "Sexloop" + string(position))
{
    //escape Attempt//
    
    suspend(-1);
    sextimer += 1;      //Dante: find origin
    if(sextimer &lt; 30 &amp;&amp; global.e &amp;&amp; obj_player.stam &gt; 25)
    {
        if(obj_player.act != "Escape")
        {
            global.struggle = false;
            obj_player.act = "Escape";
            obj_player.visible = true;
            suspend(45);
            obj_player.stam -= 25;
        }
        
        //Dante: Seems familiar, probably copypasta
        with(instance_nearest(x, y, obj_enemy))
        {
            instance_destroy();
        }
        
    }
    if (sextimer &gt; 30)        //escape fail
    {
        //must reach 100 lust to cum w/o losing stam
        var midframe = image_number / 2;
            //code runs each thrust
        if(image_index == midframe)
        {
            stam -= 1;
            lust += 2;
            obj_player.hp -= 1;
            gui.text = string(act);
        }
        if(keyboard_check_released(ord('E')))
        {
            stam -= 2;
            target.stam -= 2;
        }
        
    }
    if(stam &lt; 0)    //stun
    {
        if(obj_player.act != "Escape")
        {
            obj_player.act = "Escape";
            obj_player.visible = true;
            suspend(45);
            global.struggle = false;        //Dante: note the globals
        }
        
        //Dante: Close attention here
        //is "with" just to declare the scope for instance_destroy()?
        with(instance_nearest(x, y, obj_enemy))
        {
            instance_destroy();
        }
    }
    if(lust &gt;= 100)   //cum
    {
        act = "Sexfinish" + string(position);
    }
}
else if(act == "Sexfinish" + string(position))
{
    //100 lust reached, add creampie stat and play for a few secs

    if(!obj_player.suspended)
    {
        //Dante: copypasta
        obj_player.visible = true;
        with(instance_nearest(x, y, obj_enemy))
        {
            instance_destroy();
        }
    }
}

if(stam &lt; 0)        //stun
{
        //Dante: Copypasta
        with(instance_nearest(x, y, obj_enemy))
        {
            instance_destroy();
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
