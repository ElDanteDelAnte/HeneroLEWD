<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SP_Idle2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_char</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
// starting values, can be changed
minvel=3;
stevel=minvel*.5;//stealthing speed
maxvel=minvel*1.75;
hp=100;
stam=100;
stamDec=.5;
mood=5;

//leave alone//
suspended=false;
instance_create(0,0,gui);
dbox("Welcome to LEWD!#WASD: Make Lainie Walk#Shift: Sprint#Tab: Toggle inventory.#E key: General action button# ... Enjoy your stay!");
polar=false;
if(!polar){
    ori=2;
    horizontal=0;
    vertical=0;
}
targetX=mouse_x;
targetY=mouse_y;
numDir=8;
curvel=0;
stamBlock=false;
type="";
act="Idle";
curAct=act;
variant=0;//couldn't think of a better name, determines what actions you'll be doing in special situations( i.e. tall grass, water, etc.);
curVariant=variant;
image_speed=.125
quipacity=15
//Equipment Slots setup
for(i=quipacity;i&gt;=0;i--){
    //0-name,1-description
    quipSlot[i,0]=-1;
    quipSlot[i,1]="";
}
//Collectibles Array
cap=31
for(i=cap;i&gt;=0;i--){
    //0-tag,1-quantity,2-value,description
    itemSlot[i,0]=-1;
    itemslot[i,1]=0;
    itemslot[i,2]=0;
    itemslot[i,3]="";
}
time=0;
timer=time;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Behavior/Control

if(curAct!=act){
    behavior(act);
    curAct=act;
}

//Controls//
if(!suspended){
    //attack//
    if(mouse_check_button_released(mb_left)&amp;&amp;stam&gt;10){
        instance_create(x,y,obj_projectile);
        stam-=10
    }
    //use suspend(timer) to disable controls temporarily
    //use restore() to disable suspension;
    if(!polar){
        if(global.w){
            vertical=-1;
        }else if(global.s){
            vertical=1;
        }else{
            vertical=0;
        }
        if(global.a){
            horizontal=-1;
        }else if(global.d){
            horizontal=1;
        }else{
            horizontal=0;
        }
        if(global.w||global.a||global.s||global.d){
            if(global.shift &amp;&amp; !stamBlock){
                act="Run";
                stam-=stamDec
            }else{
                act="Walk";
            }
                
        }else{
            act="Idle";
        }
    }else{
    if(global.lmb){
        if(global.shift &amp;&amp; !stamBlock){
            act="Run";
            stam-=stamDec
        }else{
            act="Walk";
        }
    }else{
        act="Idle";
    }
        targetX=mouse_x;targetY=mouse_y;
    }
    mood=floor(hp/33.33);
    if(hp&lt;=0){
        hp=0;
    }


}

if(suspended){//for timed suspension best used for simple, 1-piece animations.
    time+=1;
    if(act=="Escape"){
        lastImage=image_number;
        if(image_index&gt;=lastImage-4){
            image_speed=0;
        }
    }
    if(time&gt;=timer){
        resume();
    }
}


//Stamgmt
    if(stam&lt;100 &amp;&amp; curvel&lt;maxvel){
        stam+=stamDec
    }if(stam&lt;0){
        stamBlock=true;
    }if(stamBlock &amp;&amp; stam&gt;25){
        stamBlock=false;
    }
    
if(collision_point(x,y,obj_transfer,false,false)){
    inst=instance_nearest(x,y,obj_transfer);
    spawn(inst.destX,inst.destY,inst.destRoom);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
